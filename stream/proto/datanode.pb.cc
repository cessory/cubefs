// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datanode.proto

#include "datanode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CommonReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CommonResp;
}  // namespace protobuf_common_2eproto
namespace snail {
namespace stream {
class WriteExtentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteExtentReq>
      _instance;
} _WriteExtentReq_default_instance_;
class ReadExtentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadExtentReq>
      _instance;
} _ReadExtentReq_default_instance_;
class ReadExtentRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadExtentResp>
      _instance;
} _ReadExtentResp_default_instance_;
class DeleteExtentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteExtentReq>
      _instance;
} _DeleteExtentReq_default_instance_;
class GetExtentReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetExtentReq>
      _instance;
} _GetExtentReq_default_instance_;
class GetExtentRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetExtentResp>
      _instance;
} _GetExtentResp_default_instance_;
class UpdateDiskStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateDiskStatusReq>
      _instance;
} _UpdateDiskStatusReq_default_instance_;
}  // namespace stream
}  // namespace snail
namespace protobuf_datanode_2eproto {
static void InitDefaultsWriteExtentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::snail::stream::_WriteExtentReq_default_instance_;
    new (ptr) ::snail::stream::WriteExtentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::snail::stream::WriteExtentReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteExtentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteExtentReq}, {
      &protobuf_common_2eproto::scc_info_CommonReq.base,}};

static void InitDefaultsReadExtentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::snail::stream::_ReadExtentReq_default_instance_;
    new (ptr) ::snail::stream::ReadExtentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::snail::stream::ReadExtentReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadExtentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadExtentReq}, {
      &protobuf_common_2eproto::scc_info_CommonReq.base,}};

static void InitDefaultsReadExtentResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::snail::stream::_ReadExtentResp_default_instance_;
    new (ptr) ::snail::stream::ReadExtentResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::snail::stream::ReadExtentResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadExtentResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadExtentResp}, {
      &protobuf_common_2eproto::scc_info_CommonResp.base,}};

static void InitDefaultsDeleteExtentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::snail::stream::_DeleteExtentReq_default_instance_;
    new (ptr) ::snail::stream::DeleteExtentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::snail::stream::DeleteExtentReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteExtentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteExtentReq}, {
      &protobuf_common_2eproto::scc_info_CommonResp.base,}};

static void InitDefaultsGetExtentReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::snail::stream::_GetExtentReq_default_instance_;
    new (ptr) ::snail::stream::GetExtentReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::snail::stream::GetExtentReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetExtentReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetExtentReq}, {
      &protobuf_common_2eproto::scc_info_CommonResp.base,}};

static void InitDefaultsGetExtentResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::snail::stream::_GetExtentResp_default_instance_;
    new (ptr) ::snail::stream::GetExtentResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::snail::stream::GetExtentResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetExtentResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetExtentResp}, {
      &protobuf_common_2eproto::scc_info_CommonResp.base,}};

static void InitDefaultsUpdateDiskStatusReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::snail::stream::_UpdateDiskStatusReq_default_instance_;
    new (ptr) ::snail::stream::UpdateDiskStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::snail::stream::UpdateDiskStatusReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateDiskStatusReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateDiskStatusReq}, {
      &protobuf_common_2eproto::scc_info_CommonResp.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WriteExtentReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadExtentReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadExtentResp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteExtentReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetExtentReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetExtentResp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateDiskStatusReq.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::WriteExtentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::WriteExtentReq, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::WriteExtentReq, diskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::WriteExtentReq, extent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::WriteExtentReq, off_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::WriteExtentReq, len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentReq, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentReq, diskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentReq, extent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentReq, off_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentReq, len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentResp, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::ReadExtentResp, len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::DeleteExtentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::DeleteExtentReq, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::DeleteExtentReq, extent_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::GetExtentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::GetExtentReq, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::GetExtentReq, extent_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::GetExtentResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::GetExtentResp, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::GetExtentResp, len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::GetExtentResp, ctime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, diskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::snail::stream::WriteExtentReq)},
  { 10, -1, sizeof(::snail::stream::ReadExtentReq)},
  { 20, -1, sizeof(::snail::stream::ReadExtentResp)},
  { 27, -1, sizeof(::snail::stream::DeleteExtentReq)},
  { 34, -1, sizeof(::snail::stream::GetExtentReq)},
  { 41, -1, sizeof(::snail::stream::GetExtentResp)},
  { 49, -1, sizeof(::snail::stream::UpdateDiskStatusReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::snail::stream::_WriteExtentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::snail::stream::_ReadExtentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::snail::stream::_ReadExtentResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::snail::stream::_DeleteExtentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::snail::stream::_GetExtentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::snail::stream::_GetExtentResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::snail::stream::_UpdateDiskStatusReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "datanode.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016datanode.proto\022\014snail.stream\032\014common.p"
      "roto\"t\n\016WriteExtentReq\022%\n\004base\030\001 \001(\0132\027.s"
      "nail.stream.CommonReq\022\016\n\006diskid\030\002 \001(\r\022\021\n"
      "\textent_id\030\003 \001(\t\022\013\n\003off\030\004 \001(\004\022\013\n\003len\030\005 \001"
      "(\004\"s\n\rReadExtentReq\022%\n\004base\030\001 \001(\0132\027.snai"
      "l.stream.CommonReq\022\016\n\006diskid\030\002 \001(\r\022\021\n\tex"
      "tent_id\030\003 \001(\t\022\013\n\003off\030\004 \001(\004\022\013\n\003len\030\005 \001(\004\""
      "E\n\016ReadExtentResp\022&\n\004base\030\001 \001(\0132\030.snail."
      "stream.CommonResp\022\013\n\003len\030\002 \001(\004\"L\n\017Delete"
      "ExtentReq\022&\n\004base\030\001 \001(\0132\030.snail.stream.C"
      "ommonResp\022\021\n\textent_id\030\002 \001(\t\"I\n\014GetExten"
      "tReq\022&\n\004base\030\001 \001(\0132\030.snail.stream.Common"
      "Resp\022\021\n\textent_id\030\002 \001(\t\"S\n\rGetExtentResp"
      "\022&\n\004base\030\001 \001(\0132\030.snail.stream.CommonResp"
      "\022\013\n\003len\030\002 \001(\004\022\r\n\005ctime\030\003 \001(\r\"]\n\023UpdateDi"
      "skStatusReq\022&\n\004base\030\001 \001(\0132\030.snail.stream"
      ".CommonResp\022\016\n\006diskid\030\002 \001(\r\022\016\n\006status\030\003 "
      "\001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 691);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datanode.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_datanode_2eproto
namespace snail {
namespace stream {

// ===================================================================

void WriteExtentReq::InitAsDefaultInstance() {
  ::snail::stream::_WriteExtentReq_default_instance_._instance.get_mutable()->base_ = const_cast< ::snail::stream::CommonReq*>(
      ::snail::stream::CommonReq::internal_default_instance());
}
void WriteExtentReq::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteExtentReq::kBaseFieldNumber;
const int WriteExtentReq::kDiskidFieldNumber;
const int WriteExtentReq::kExtentIdFieldNumber;
const int WriteExtentReq::kOffFieldNumber;
const int WriteExtentReq::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteExtentReq::WriteExtentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datanode_2eproto::scc_info_WriteExtentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:snail.stream.WriteExtentReq)
}
WriteExtentReq::WriteExtentReq(const WriteExtentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extent_id().size() > 0) {
    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    base_ = new ::snail::stream::CommonReq(*from.base_);
  } else {
    base_ = NULL;
  }
  ::memcpy(&off_, &from.off_,
    static_cast<size_t>(reinterpret_cast<char*>(&diskid_) -
    reinterpret_cast<char*>(&off_)) + sizeof(diskid_));
  // @@protoc_insertion_point(copy_constructor:snail.stream.WriteExtentReq)
}

void WriteExtentReq::SharedCtor() {
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diskid_) -
      reinterpret_cast<char*>(&base_)) + sizeof(diskid_));
}

WriteExtentReq::~WriteExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.WriteExtentReq)
  SharedDtor();
}

void WriteExtentReq::SharedDtor() {
  extent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_;
}

void WriteExtentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteExtentReq::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteExtentReq& WriteExtentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datanode_2eproto::scc_info_WriteExtentReq.base);
  return *internal_default_instance();
}


void WriteExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.WriteExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  ::memset(&off_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diskid_) -
      reinterpret_cast<char*>(&off_)) + sizeof(diskid_));
  _internal_metadata_.Clear();
}

bool WriteExtentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:snail.stream.WriteExtentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .snail.stream.CommonReq base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 diskid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extent_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extent_id().data(), static_cast<int>(this->extent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "snail.stream.WriteExtentReq.extent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 off = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &off_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:snail.stream.WriteExtentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:snail.stream.WriteExtentReq)
  return false;
#undef DO_
}

void WriteExtentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:snail.stream.WriteExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonReq base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->diskid(), output);
  }

  // string extent_id = 3;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.WriteExtentReq.extent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extent_id(), output);
  }

  // uint64 off = 4;
  if (this->off() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->off(), output);
  }

  // uint64 len = 5;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:snail.stream.WriteExtentReq)
}

::google::protobuf::uint8* WriteExtentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.WriteExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonReq base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->diskid(), target);
  }

  // string extent_id = 3;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.WriteExtentReq.extent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extent_id(), target);
  }

  // uint64 off = 4;
  if (this->off() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->off(), target);
  }

  // uint64 len = 5;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.WriteExtentReq)
  return target;
}

size_t WriteExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.WriteExtentReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string extent_id = 3;
  if (this->extent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extent_id());
  }

  // .snail.stream.CommonReq base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // uint64 off = 4;
  if (this->off() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->off());
  }

  // uint64 len = 5;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diskid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteExtentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:snail.stream.WriteExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteExtentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteExtentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:snail.stream.WriteExtentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:snail.stream.WriteExtentReq)
    MergeFrom(*source);
  }
}

void WriteExtentReq::MergeFrom(const WriteExtentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.WriteExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.extent_id().size() > 0) {

    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    mutable_base()->::snail::stream::CommonReq::MergeFrom(from.base());
  }
  if (from.off() != 0) {
    set_off(from.off());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
  if (from.diskid() != 0) {
    set_diskid(from.diskid());
  }
}

void WriteExtentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:snail.stream.WriteExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteExtentReq::CopyFrom(const WriteExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.WriteExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteExtentReq::IsInitialized() const {
  return true;
}

void WriteExtentReq::Swap(WriteExtentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteExtentReq::InternalSwap(WriteExtentReq* other) {
  using std::swap;
  extent_id_.Swap(&other->extent_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(base_, other->base_);
  swap(off_, other->off_);
  swap(len_, other->len_);
  swap(diskid_, other->diskid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteExtentReq::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadExtentReq::InitAsDefaultInstance() {
  ::snail::stream::_ReadExtentReq_default_instance_._instance.get_mutable()->base_ = const_cast< ::snail::stream::CommonReq*>(
      ::snail::stream::CommonReq::internal_default_instance());
}
void ReadExtentReq::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadExtentReq::kBaseFieldNumber;
const int ReadExtentReq::kDiskidFieldNumber;
const int ReadExtentReq::kExtentIdFieldNumber;
const int ReadExtentReq::kOffFieldNumber;
const int ReadExtentReq::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadExtentReq::ReadExtentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datanode_2eproto::scc_info_ReadExtentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:snail.stream.ReadExtentReq)
}
ReadExtentReq::ReadExtentReq(const ReadExtentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extent_id().size() > 0) {
    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    base_ = new ::snail::stream::CommonReq(*from.base_);
  } else {
    base_ = NULL;
  }
  ::memcpy(&off_, &from.off_,
    static_cast<size_t>(reinterpret_cast<char*>(&diskid_) -
    reinterpret_cast<char*>(&off_)) + sizeof(diskid_));
  // @@protoc_insertion_point(copy_constructor:snail.stream.ReadExtentReq)
}

void ReadExtentReq::SharedCtor() {
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diskid_) -
      reinterpret_cast<char*>(&base_)) + sizeof(diskid_));
}

ReadExtentReq::~ReadExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.ReadExtentReq)
  SharedDtor();
}

void ReadExtentReq::SharedDtor() {
  extent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_;
}

void ReadExtentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadExtentReq::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadExtentReq& ReadExtentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datanode_2eproto::scc_info_ReadExtentReq.base);
  return *internal_default_instance();
}


void ReadExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.ReadExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  ::memset(&off_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diskid_) -
      reinterpret_cast<char*>(&off_)) + sizeof(diskid_));
  _internal_metadata_.Clear();
}

bool ReadExtentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:snail.stream.ReadExtentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .snail.stream.CommonReq base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 diskid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extent_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extent_id().data(), static_cast<int>(this->extent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "snail.stream.ReadExtentReq.extent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 off = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &off_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:snail.stream.ReadExtentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:snail.stream.ReadExtentReq)
  return false;
#undef DO_
}

void ReadExtentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:snail.stream.ReadExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonReq base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->diskid(), output);
  }

  // string extent_id = 3;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.ReadExtentReq.extent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->extent_id(), output);
  }

  // uint64 off = 4;
  if (this->off() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->off(), output);
  }

  // uint64 len = 5;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:snail.stream.ReadExtentReq)
}

::google::protobuf::uint8* ReadExtentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.ReadExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonReq base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->diskid(), target);
  }

  // string extent_id = 3;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.ReadExtentReq.extent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->extent_id(), target);
  }

  // uint64 off = 4;
  if (this->off() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->off(), target);
  }

  // uint64 len = 5;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.ReadExtentReq)
  return target;
}

size_t ReadExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.ReadExtentReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string extent_id = 3;
  if (this->extent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extent_id());
  }

  // .snail.stream.CommonReq base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // uint64 off = 4;
  if (this->off() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->off());
  }

  // uint64 len = 5;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diskid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadExtentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:snail.stream.ReadExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadExtentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadExtentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:snail.stream.ReadExtentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:snail.stream.ReadExtentReq)
    MergeFrom(*source);
  }
}

void ReadExtentReq::MergeFrom(const ReadExtentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.ReadExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.extent_id().size() > 0) {

    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    mutable_base()->::snail::stream::CommonReq::MergeFrom(from.base());
  }
  if (from.off() != 0) {
    set_off(from.off());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
  if (from.diskid() != 0) {
    set_diskid(from.diskid());
  }
}

void ReadExtentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:snail.stream.ReadExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadExtentReq::CopyFrom(const ReadExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.ReadExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadExtentReq::IsInitialized() const {
  return true;
}

void ReadExtentReq::Swap(ReadExtentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadExtentReq::InternalSwap(ReadExtentReq* other) {
  using std::swap;
  extent_id_.Swap(&other->extent_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(base_, other->base_);
  swap(off_, other->off_);
  swap(len_, other->len_);
  swap(diskid_, other->diskid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadExtentReq::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadExtentResp::InitAsDefaultInstance() {
  ::snail::stream::_ReadExtentResp_default_instance_._instance.get_mutable()->base_ = const_cast< ::snail::stream::CommonResp*>(
      ::snail::stream::CommonResp::internal_default_instance());
}
void ReadExtentResp::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadExtentResp::kBaseFieldNumber;
const int ReadExtentResp::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadExtentResp::ReadExtentResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datanode_2eproto::scc_info_ReadExtentResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:snail.stream.ReadExtentResp)
}
ReadExtentResp::ReadExtentResp(const ReadExtentResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::snail::stream::CommonResp(*from.base_);
  } else {
    base_ = NULL;
  }
  len_ = from.len_;
  // @@protoc_insertion_point(copy_constructor:snail.stream.ReadExtentResp)
}

void ReadExtentResp::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&base_)) + sizeof(len_));
}

ReadExtentResp::~ReadExtentResp() {
  // @@protoc_insertion_point(destructor:snail.stream.ReadExtentResp)
  SharedDtor();
}

void ReadExtentResp::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
}

void ReadExtentResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadExtentResp::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadExtentResp& ReadExtentResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datanode_2eproto::scc_info_ReadExtentResp.base);
  return *internal_default_instance();
}


void ReadExtentResp::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.ReadExtentResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  len_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ReadExtentResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:snail.stream.ReadExtentResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .snail.stream.CommonResp base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:snail.stream.ReadExtentResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:snail.stream.ReadExtentResp)
  return false;
#undef DO_
}

void ReadExtentResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:snail.stream.ReadExtentResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:snail.stream.ReadExtentResp)
}

::google::protobuf::uint8* ReadExtentResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.ReadExtentResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.ReadExtentResp)
  return target;
}

size_t ReadExtentResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.ReadExtentResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadExtentResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:snail.stream.ReadExtentResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadExtentResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadExtentResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:snail.stream.ReadExtentResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:snail.stream.ReadExtentResp)
    MergeFrom(*source);
  }
}

void ReadExtentResp::MergeFrom(const ReadExtentResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.ReadExtentResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_base()) {
    mutable_base()->::snail::stream::CommonResp::MergeFrom(from.base());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void ReadExtentResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:snail.stream.ReadExtentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadExtentResp::CopyFrom(const ReadExtentResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.ReadExtentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadExtentResp::IsInitialized() const {
  return true;
}

void ReadExtentResp::Swap(ReadExtentResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadExtentResp::InternalSwap(ReadExtentResp* other) {
  using std::swap;
  swap(base_, other->base_);
  swap(len_, other->len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadExtentResp::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteExtentReq::InitAsDefaultInstance() {
  ::snail::stream::_DeleteExtentReq_default_instance_._instance.get_mutable()->base_ = const_cast< ::snail::stream::CommonResp*>(
      ::snail::stream::CommonResp::internal_default_instance());
}
void DeleteExtentReq::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteExtentReq::kBaseFieldNumber;
const int DeleteExtentReq::kExtentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteExtentReq::DeleteExtentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datanode_2eproto::scc_info_DeleteExtentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:snail.stream.DeleteExtentReq)
}
DeleteExtentReq::DeleteExtentReq(const DeleteExtentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extent_id().size() > 0) {
    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    base_ = new ::snail::stream::CommonResp(*from.base_);
  } else {
    base_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:snail.stream.DeleteExtentReq)
}

void DeleteExtentReq::SharedCtor() {
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_ = NULL;
}

DeleteExtentReq::~DeleteExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.DeleteExtentReq)
  SharedDtor();
}

void DeleteExtentReq::SharedDtor() {
  extent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_;
}

void DeleteExtentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteExtentReq::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteExtentReq& DeleteExtentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datanode_2eproto::scc_info_DeleteExtentReq.base);
  return *internal_default_instance();
}


void DeleteExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.DeleteExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteExtentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:snail.stream.DeleteExtentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .snail.stream.CommonResp base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extent_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extent_id().data(), static_cast<int>(this->extent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "snail.stream.DeleteExtentReq.extent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:snail.stream.DeleteExtentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:snail.stream.DeleteExtentReq)
  return false;
#undef DO_
}

void DeleteExtentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:snail.stream.DeleteExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // string extent_id = 2;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.DeleteExtentReq.extent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extent_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:snail.stream.DeleteExtentReq)
}

::google::protobuf::uint8* DeleteExtentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.DeleteExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // string extent_id = 2;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.DeleteExtentReq.extent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extent_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.DeleteExtentReq)
  return target;
}

size_t DeleteExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.DeleteExtentReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string extent_id = 2;
  if (this->extent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extent_id());
  }

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteExtentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:snail.stream.DeleteExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteExtentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteExtentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:snail.stream.DeleteExtentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:snail.stream.DeleteExtentReq)
    MergeFrom(*source);
  }
}

void DeleteExtentReq::MergeFrom(const DeleteExtentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.DeleteExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.extent_id().size() > 0) {

    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    mutable_base()->::snail::stream::CommonResp::MergeFrom(from.base());
  }
}

void DeleteExtentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:snail.stream.DeleteExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteExtentReq::CopyFrom(const DeleteExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.DeleteExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteExtentReq::IsInitialized() const {
  return true;
}

void DeleteExtentReq::Swap(DeleteExtentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteExtentReq::InternalSwap(DeleteExtentReq* other) {
  using std::swap;
  extent_id_.Swap(&other->extent_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(base_, other->base_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteExtentReq::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetExtentReq::InitAsDefaultInstance() {
  ::snail::stream::_GetExtentReq_default_instance_._instance.get_mutable()->base_ = const_cast< ::snail::stream::CommonResp*>(
      ::snail::stream::CommonResp::internal_default_instance());
}
void GetExtentReq::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetExtentReq::kBaseFieldNumber;
const int GetExtentReq::kExtentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetExtentReq::GetExtentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datanode_2eproto::scc_info_GetExtentReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:snail.stream.GetExtentReq)
}
GetExtentReq::GetExtentReq(const GetExtentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extent_id().size() > 0) {
    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    base_ = new ::snail::stream::CommonResp(*from.base_);
  } else {
    base_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:snail.stream.GetExtentReq)
}

void GetExtentReq::SharedCtor() {
  extent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_ = NULL;
}

GetExtentReq::~GetExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.GetExtentReq)
  SharedDtor();
}

void GetExtentReq::SharedDtor() {
  extent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_;
}

void GetExtentReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetExtentReq::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetExtentReq& GetExtentReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datanode_2eproto::scc_info_GetExtentReq.base);
  return *internal_default_instance();
}


void GetExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.GetExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  _internal_metadata_.Clear();
}

bool GetExtentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:snail.stream.GetExtentReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .snail.stream.CommonResp base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extent_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extent_id().data(), static_cast<int>(this->extent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "snail.stream.GetExtentReq.extent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:snail.stream.GetExtentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:snail.stream.GetExtentReq)
  return false;
#undef DO_
}

void GetExtentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:snail.stream.GetExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // string extent_id = 2;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.GetExtentReq.extent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extent_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:snail.stream.GetExtentReq)
}

::google::protobuf::uint8* GetExtentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.GetExtentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // string extent_id = 2;
  if (this->extent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extent_id().data(), static_cast<int>(this->extent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "snail.stream.GetExtentReq.extent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extent_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.GetExtentReq)
  return target;
}

size_t GetExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.GetExtentReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string extent_id = 2;
  if (this->extent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extent_id());
  }

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetExtentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:snail.stream.GetExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetExtentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetExtentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:snail.stream.GetExtentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:snail.stream.GetExtentReq)
    MergeFrom(*source);
  }
}

void GetExtentReq::MergeFrom(const GetExtentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.GetExtentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.extent_id().size() > 0) {

    extent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extent_id_);
  }
  if (from.has_base()) {
    mutable_base()->::snail::stream::CommonResp::MergeFrom(from.base());
  }
}

void GetExtentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:snail.stream.GetExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetExtentReq::CopyFrom(const GetExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.GetExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExtentReq::IsInitialized() const {
  return true;
}

void GetExtentReq::Swap(GetExtentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetExtentReq::InternalSwap(GetExtentReq* other) {
  using std::swap;
  extent_id_.Swap(&other->extent_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(base_, other->base_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetExtentReq::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetExtentResp::InitAsDefaultInstance() {
  ::snail::stream::_GetExtentResp_default_instance_._instance.get_mutable()->base_ = const_cast< ::snail::stream::CommonResp*>(
      ::snail::stream::CommonResp::internal_default_instance());
}
void GetExtentResp::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetExtentResp::kBaseFieldNumber;
const int GetExtentResp::kLenFieldNumber;
const int GetExtentResp::kCtimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetExtentResp::GetExtentResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datanode_2eproto::scc_info_GetExtentResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:snail.stream.GetExtentResp)
}
GetExtentResp::GetExtentResp(const GetExtentResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::snail::stream::CommonResp(*from.base_);
  } else {
    base_ = NULL;
  }
  ::memcpy(&len_, &from.len_,
    static_cast<size_t>(reinterpret_cast<char*>(&ctime_) -
    reinterpret_cast<char*>(&len_)) + sizeof(ctime_));
  // @@protoc_insertion_point(copy_constructor:snail.stream.GetExtentResp)
}

void GetExtentResp::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctime_) -
      reinterpret_cast<char*>(&base_)) + sizeof(ctime_));
}

GetExtentResp::~GetExtentResp() {
  // @@protoc_insertion_point(destructor:snail.stream.GetExtentResp)
  SharedDtor();
}

void GetExtentResp::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
}

void GetExtentResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetExtentResp::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetExtentResp& GetExtentResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datanode_2eproto::scc_info_GetExtentResp.base);
  return *internal_default_instance();
}


void GetExtentResp::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.GetExtentResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  ::memset(&len_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctime_) -
      reinterpret_cast<char*>(&len_)) + sizeof(ctime_));
  _internal_metadata_.Clear();
}

bool GetExtentResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:snail.stream.GetExtentResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .snail.stream.CommonResp base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ctime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ctime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:snail.stream.GetExtentResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:snail.stream.GetExtentResp)
  return false;
#undef DO_
}

void GetExtentResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:snail.stream.GetExtentResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->len(), output);
  }

  // uint32 ctime = 3;
  if (this->ctime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ctime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:snail.stream.GetExtentResp)
}

::google::protobuf::uint8* GetExtentResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.GetExtentResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->len(), target);
  }

  // uint32 ctime = 3;
  if (this->ctime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ctime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.GetExtentResp)
  return target;
}

size_t GetExtentResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.GetExtentResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  // uint32 ctime = 3;
  if (this->ctime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ctime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetExtentResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:snail.stream.GetExtentResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetExtentResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetExtentResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:snail.stream.GetExtentResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:snail.stream.GetExtentResp)
    MergeFrom(*source);
  }
}

void GetExtentResp::MergeFrom(const GetExtentResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.GetExtentResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_base()) {
    mutable_base()->::snail::stream::CommonResp::MergeFrom(from.base());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
  if (from.ctime() != 0) {
    set_ctime(from.ctime());
  }
}

void GetExtentResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:snail.stream.GetExtentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetExtentResp::CopyFrom(const GetExtentResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.GetExtentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExtentResp::IsInitialized() const {
  return true;
}

void GetExtentResp::Swap(GetExtentResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetExtentResp::InternalSwap(GetExtentResp* other) {
  using std::swap;
  swap(base_, other->base_);
  swap(len_, other->len_);
  swap(ctime_, other->ctime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetExtentResp::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateDiskStatusReq::InitAsDefaultInstance() {
  ::snail::stream::_UpdateDiskStatusReq_default_instance_._instance.get_mutable()->base_ = const_cast< ::snail::stream::CommonResp*>(
      ::snail::stream::CommonResp::internal_default_instance());
}
void UpdateDiskStatusReq::clear_base() {
  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDiskStatusReq::kBaseFieldNumber;
const int UpdateDiskStatusReq::kDiskidFieldNumber;
const int UpdateDiskStatusReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDiskStatusReq::UpdateDiskStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_datanode_2eproto::scc_info_UpdateDiskStatusReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:snail.stream.UpdateDiskStatusReq)
}
UpdateDiskStatusReq::UpdateDiskStatusReq(const UpdateDiskStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_base()) {
    base_ = new ::snail::stream::CommonResp(*from.base_);
  } else {
    base_ = NULL;
  }
  ::memcpy(&diskid_, &from.diskid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&diskid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:snail.stream.UpdateDiskStatusReq)
}

void UpdateDiskStatusReq::SharedCtor() {
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&base_)) + sizeof(status_));
}

UpdateDiskStatusReq::~UpdateDiskStatusReq() {
  // @@protoc_insertion_point(destructor:snail.stream.UpdateDiskStatusReq)
  SharedDtor();
}

void UpdateDiskStatusReq::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
}

void UpdateDiskStatusReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateDiskStatusReq::descriptor() {
  ::protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateDiskStatusReq& UpdateDiskStatusReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_datanode_2eproto::scc_info_UpdateDiskStatusReq.base);
  return *internal_default_instance();
}


void UpdateDiskStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.UpdateDiskStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && base_ != NULL) {
    delete base_;
  }
  base_ = NULL;
  ::memset(&diskid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&diskid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool UpdateDiskStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:snail.stream.UpdateDiskStatusReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .snail.stream.CommonResp base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 diskid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:snail.stream.UpdateDiskStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:snail.stream.UpdateDiskStatusReq)
  return false;
#undef DO_
}

void UpdateDiskStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:snail.stream.UpdateDiskStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base(), output);
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->diskid(), output);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:snail.stream.UpdateDiskStatusReq)
}

::google::protobuf::uint8* UpdateDiskStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.UpdateDiskStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base(), deterministic, target);
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->diskid(), target);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.UpdateDiskStatusReq)
  return target;
}

size_t UpdateDiskStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.UpdateDiskStatusReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .snail.stream.CommonResp base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // uint32 diskid = 2;
  if (this->diskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diskid());
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateDiskStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:snail.stream.UpdateDiskStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDiskStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDiskStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:snail.stream.UpdateDiskStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:snail.stream.UpdateDiskStatusReq)
    MergeFrom(*source);
  }
}

void UpdateDiskStatusReq::MergeFrom(const UpdateDiskStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.UpdateDiskStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_base()) {
    mutable_base()->::snail::stream::CommonResp::MergeFrom(from.base());
  }
  if (from.diskid() != 0) {
    set_diskid(from.diskid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void UpdateDiskStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:snail.stream.UpdateDiskStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDiskStatusReq::CopyFrom(const UpdateDiskStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.UpdateDiskStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDiskStatusReq::IsInitialized() const {
  return true;
}

void UpdateDiskStatusReq::Swap(UpdateDiskStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDiskStatusReq::InternalSwap(UpdateDiskStatusReq* other) {
  using std::swap;
  swap(base_, other->base_);
  swap(diskid_, other->diskid_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateDiskStatusReq::GetMetadata() const {
  protobuf_datanode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_datanode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace stream
}  // namespace snail
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::snail::stream::WriteExtentReq* Arena::CreateMaybeMessage< ::snail::stream::WriteExtentReq >(Arena* arena) {
  return Arena::CreateInternal< ::snail::stream::WriteExtentReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::snail::stream::ReadExtentReq* Arena::CreateMaybeMessage< ::snail::stream::ReadExtentReq >(Arena* arena) {
  return Arena::CreateInternal< ::snail::stream::ReadExtentReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::snail::stream::ReadExtentResp* Arena::CreateMaybeMessage< ::snail::stream::ReadExtentResp >(Arena* arena) {
  return Arena::CreateInternal< ::snail::stream::ReadExtentResp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::snail::stream::DeleteExtentReq* Arena::CreateMaybeMessage< ::snail::stream::DeleteExtentReq >(Arena* arena) {
  return Arena::CreateInternal< ::snail::stream::DeleteExtentReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::snail::stream::GetExtentReq* Arena::CreateMaybeMessage< ::snail::stream::GetExtentReq >(Arena* arena) {
  return Arena::CreateInternal< ::snail::stream::GetExtentReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::snail::stream::GetExtentResp* Arena::CreateMaybeMessage< ::snail::stream::GetExtentResp >(Arena* arena) {
  return Arena::CreateInternal< ::snail::stream::GetExtentResp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::snail::stream::UpdateDiskStatusReq* Arena::CreateMaybeMessage< ::snail::stream::UpdateDiskStatusReq >(Arena* arena) {
  return Arena::CreateInternal< ::snail::stream::UpdateDiskStatusReq >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
