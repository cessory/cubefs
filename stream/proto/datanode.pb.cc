// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datanode.proto
// Protobuf C++ Version: 5.27.0-dev

#include "datanode.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace snail {
namespace stream {

inline constexpr WriteExtentReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_{nullptr},
        off_{::uint64_t{0u}},
        len_{::uint64_t{0u}},
        diskid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR WriteExtentReq::WriteExtentReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WriteExtentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteExtentReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteExtentReqDefaultTypeInternal() {}
  union {
    WriteExtentReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteExtentReqDefaultTypeInternal _WriteExtentReq_default_instance_;

inline constexpr UpdateDiskStatusReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        diskid_{0u},
        status_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDiskStatusReq::UpdateDiskStatusReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateDiskStatusReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDiskStatusReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDiskStatusReqDefaultTypeInternal() {}
  union {
    UpdateDiskStatusReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDiskStatusReqDefaultTypeInternal _UpdateDiskStatusReq_default_instance_;

inline constexpr ReadExtentResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        len_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ReadExtentResp::ReadExtentResp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReadExtentRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadExtentRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadExtentRespDefaultTypeInternal() {}
  union {
    ReadExtentResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadExtentRespDefaultTypeInternal _ReadExtentResp_default_instance_;

inline constexpr ReadExtentReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_{nullptr},
        off_{::uint64_t{0u}},
        len_{::uint64_t{0u}},
        diskid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ReadExtentReq::ReadExtentReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReadExtentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadExtentReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadExtentReqDefaultTypeInternal() {}
  union {
    ReadExtentReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadExtentReqDefaultTypeInternal _ReadExtentReq_default_instance_;

inline constexpr GetExtentResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        len_{::uint64_t{0u}},
        ctime_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GetExtentResp::GetExtentResp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetExtentRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExtentRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExtentRespDefaultTypeInternal() {}
  union {
    GetExtentResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExtentRespDefaultTypeInternal _GetExtentResp_default_instance_;

inline constexpr GetExtentReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_{nullptr},
        diskid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GetExtentReq::GetExtentReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetExtentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExtentReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExtentReqDefaultTypeInternal() {}
  union {
    GetExtentReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExtentReqDefaultTypeInternal _GetExtentReq_default_instance_;

inline constexpr DeleteExtentReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_{nullptr},
        diskid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteExtentReq::DeleteExtentReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteExtentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteExtentReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteExtentReqDefaultTypeInternal() {}
  union {
    DeleteExtentReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteExtentReqDefaultTypeInternal _DeleteExtentReq_default_instance_;
}  // namespace stream
}  // namespace snail
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_datanode_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_datanode_2eproto = nullptr;
const ::uint32_t
    TableStruct_datanode_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::snail::stream::WriteExtentReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::WriteExtentReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::snail::stream::WriteExtentReq, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::WriteExtentReq, _impl_.diskid_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::WriteExtentReq, _impl_.extent_id_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::WriteExtentReq, _impl_.off_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::WriteExtentReq, _impl_.len_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentReq, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentReq, _impl_.diskid_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentReq, _impl_.extent_id_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentReq, _impl_.off_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentReq, _impl_.len_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentResp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentResp, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::ReadExtentResp, _impl_.len_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::snail::stream::DeleteExtentReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::DeleteExtentReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::snail::stream::DeleteExtentReq, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::DeleteExtentReq, _impl_.diskid_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::DeleteExtentReq, _impl_.extent_id_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentReq, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentReq, _impl_.diskid_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentReq, _impl_.extent_id_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentResp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentResp, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentResp, _impl_.len_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::GetExtentResp, _impl_.ctime_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, _impl_.diskid_),
        PROTOBUF_FIELD_OFFSET(::snail::stream::UpdateDiskStatusReq, _impl_.status_),
        0,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::snail::stream::WriteExtentReq)},
        {18, 31, -1, sizeof(::snail::stream::ReadExtentReq)},
        {36, 46, -1, sizeof(::snail::stream::ReadExtentResp)},
        {48, 59, -1, sizeof(::snail::stream::DeleteExtentReq)},
        {62, 73, -1, sizeof(::snail::stream::GetExtentReq)},
        {76, 87, -1, sizeof(::snail::stream::GetExtentResp)},
        {90, 101, -1, sizeof(::snail::stream::UpdateDiskStatusReq)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::snail::stream::_WriteExtentReq_default_instance_._instance,
    &::snail::stream::_ReadExtentReq_default_instance_._instance,
    &::snail::stream::_ReadExtentResp_default_instance_._instance,
    &::snail::stream::_DeleteExtentReq_default_instance_._instance,
    &::snail::stream::_GetExtentReq_default_instance_._instance,
    &::snail::stream::_GetExtentResp_default_instance_._instance,
    &::snail::stream::_UpdateDiskStatusReq_default_instance_._instance,
};
const char descriptor_table_protodef_datanode_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016datanode.proto\022\014snail.stream\032\014common.p"
    "roto\"t\n\016WriteExtentReq\022%\n\004base\030\001 \001(\0132\027.s"
    "nail.stream.CommonReq\022\016\n\006diskid\030\002 \001(\r\022\021\n"
    "\textent_id\030\003 \001(\t\022\013\n\003off\030\004 \001(\004\022\013\n\003len\030\005 \001"
    "(\004\"s\n\rReadExtentReq\022%\n\004base\030\001 \001(\0132\027.snai"
    "l.stream.CommonReq\022\016\n\006diskid\030\002 \001(\r\022\021\n\tex"
    "tent_id\030\003 \001(\t\022\013\n\003off\030\004 \001(\004\022\013\n\003len\030\005 \001(\004\""
    "E\n\016ReadExtentResp\022&\n\004base\030\001 \001(\0132\030.snail."
    "stream.CommonResp\022\013\n\003len\030\002 \001(\004\"\\\n\017Delete"
    "ExtentReq\022&\n\004base\030\001 \001(\0132\030.snail.stream.C"
    "ommonResp\022\016\n\006diskid\030\002 \001(\r\022\021\n\textent_id\030\003"
    " \001(\t\"Y\n\014GetExtentReq\022&\n\004base\030\001 \001(\0132\030.sna"
    "il.stream.CommonResp\022\016\n\006diskid\030\002 \001(\r\022\021\n\t"
    "extent_id\030\003 \001(\t\"S\n\rGetExtentResp\022&\n\004base"
    "\030\001 \001(\0132\030.snail.stream.CommonResp\022\013\n\003len\030"
    "\002 \001(\004\022\r\n\005ctime\030\003 \001(\r\"]\n\023UpdateDiskStatus"
    "Req\022&\n\004base\030\001 \001(\0132\030.snail.stream.CommonR"
    "esp\022\016\n\006diskid\030\002 \001(\r\022\016\n\006status\030\003 \001(\r*\372\001\n\017"
    "DatanodeMsgType\022\024\n\020WRITE_EXTENT_REQ\020\000\022\025\n"
    "\021WRITE_EXTENT_RESP\020\001\022\023\n\017READ_EXTENT_REQ\020"
    "\002\022\024\n\020READ_EXTENT_RESP\020\003\022\025\n\021DELETE_EXTENT"
    "_REQ\020\004\022\026\n\022DELETE_EXTENT_RESP\020\005\022\022\n\016GET_EX"
    "TENT_REQ\020\006\022\023\n\017GET_EXTENT_RESP\020\007\022\032\n\026UPDAT"
    "E_DISK_STATUS_REQ\020\010\022\033\n\027UPDATE_DISK_STATU"
    "S_RESP\020\tb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_datanode_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_datanode_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_datanode_2eproto = {
    false,
    false,
    976,
    descriptor_table_protodef_datanode_2eproto,
    "datanode.proto",
    &descriptor_table_datanode_2eproto_once,
    descriptor_table_datanode_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_datanode_2eproto::offsets,
    file_level_enum_descriptors_datanode_2eproto,
    file_level_service_descriptors_datanode_2eproto,
};
namespace snail {
namespace stream {
const ::google::protobuf::EnumDescriptor* DatanodeMsgType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_datanode_2eproto);
  return file_level_enum_descriptors_datanode_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t DatanodeMsgType_internal_data_[] = {
    655360u, 0u, };
bool DatanodeMsgType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
// ===================================================================

class WriteExtentReq::_Internal {
 public:
  using HasBits = decltype(std::declval<WriteExtentReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_._has_bits_);
};

void WriteExtentReq::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
WriteExtentReq::WriteExtentReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:snail.stream.WriteExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE WriteExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extent_id_(arena, from.extent_id_) {}

WriteExtentReq::WriteExtentReq(
    ::google::protobuf::Arena* arena,
    const WriteExtentReq& from)
    : ::google::protobuf::Message(arena) {
  WriteExtentReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonReq>(
                              arena, *from._impl_.base_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, off_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, off_),
           offsetof(Impl_, diskid_) -
               offsetof(Impl_, off_) +
               sizeof(Impl_::diskid_));

  // @@protoc_insertion_point(copy_constructor:snail.stream.WriteExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE WriteExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extent_id_(arena) {}

inline void WriteExtentReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, diskid_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::diskid_));
}
WriteExtentReq::~WriteExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.WriteExtentReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WriteExtentReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.extent_id_.Destroy();
  delete _impl_.base_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
WriteExtentReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_._cached_size_),
              false,
          },
          &WriteExtentReq::MergeImpl,
          &WriteExtentReq::kDescriptorMethods,
          &descriptor_table_datanode_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 45, 2> WriteExtentReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WriteExtentReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::snail::stream::WriteExtentReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .snail.stream.CommonReq base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.base_)}},
    // uint32 diskid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WriteExtentReq, _impl_.diskid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.diskid_)}},
    // string extent_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.extent_id_)}},
    // uint64 off = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WriteExtentReq, _impl_.off_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.off_)}},
    // uint64 len = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WriteExtentReq, _impl_.len_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.len_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .snail.stream.CommonReq base = 1;
    {PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 diskid = 2;
    {PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.diskid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string extent_id = 3;
    {PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.extent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 off = 4;
    {PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.off_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 len = 5;
    {PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.len_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::snail::stream::CommonReq>()},
  }}, {{
    "\33\0\0\11\0\0\0\0"
    "snail.stream.WriteExtentReq"
    "extent_id"
  }},
};

PROTOBUF_NOINLINE void WriteExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.WriteExtentReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extent_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  ::memset(&_impl_.off_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.diskid_) -
      reinterpret_cast<char*>(&_impl_.off_)) + sizeof(_impl_.diskid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WriteExtentReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


::uint8_t* WriteExtentReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.WriteExtentReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .snail.stream.CommonReq base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_diskid(), target);
  }

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    const std::string& _s = this->_internal_extent_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "snail.stream.WriteExtentReq.extent_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 off = 4;
  if (this->_internal_off() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_off(), target);
  }

  // uint64 len = 5;
  if (this->_internal_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.WriteExtentReq)
  return target;
}

::size_t WriteExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.WriteExtentReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_extent_id());
  }

  // .snail.stream.CommonReq base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  // uint64 off = 4;
  if (this->_internal_off() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_off());
  }

  // uint64 len = 5;
  if (this->_internal_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_len());
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_diskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void WriteExtentReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WriteExtentReq*>(&to_msg);
  auto& from = static_cast<const WriteExtentReq&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.WriteExtentReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_extent_id().empty()) {
    _this->_internal_set_extent_id(from._internal_extent_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonReq>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  if (from._internal_off() != 0) {
    _this->_impl_.off_ = from._impl_.off_;
  }
  if (from._internal_len() != 0) {
    _this->_impl_.len_ = from._impl_.len_;
  }
  if (from._internal_diskid() != 0) {
    _this->_impl_.diskid_ = from._impl_.diskid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WriteExtentReq::CopyFrom(const WriteExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.WriteExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WriteExtentReq::IsInitialized() const {
  return true;
}

void WriteExtentReq::InternalSwap(WriteExtentReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extent_id_, &other->_impl_.extent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.diskid_)
      + sizeof(WriteExtentReq::_impl_.diskid_)
      - PROTOBUF_FIELD_OFFSET(WriteExtentReq, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata WriteExtentReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReadExtentReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ReadExtentReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_._has_bits_);
};

void ReadExtentReq::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ReadExtentReq::ReadExtentReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:snail.stream.ReadExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE ReadExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extent_id_(arena, from.extent_id_) {}

ReadExtentReq::ReadExtentReq(
    ::google::protobuf::Arena* arena,
    const ReadExtentReq& from)
    : ::google::protobuf::Message(arena) {
  ReadExtentReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonReq>(
                              arena, *from._impl_.base_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, off_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, off_),
           offsetof(Impl_, diskid_) -
               offsetof(Impl_, off_) +
               sizeof(Impl_::diskid_));

  // @@protoc_insertion_point(copy_constructor:snail.stream.ReadExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE ReadExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extent_id_(arena) {}

inline void ReadExtentReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, diskid_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::diskid_));
}
ReadExtentReq::~ReadExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.ReadExtentReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReadExtentReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.extent_id_.Destroy();
  delete _impl_.base_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReadExtentReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_._cached_size_),
              false,
          },
          &ReadExtentReq::MergeImpl,
          &ReadExtentReq::kDescriptorMethods,
          &descriptor_table_datanode_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 44, 2> ReadExtentReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReadExtentReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::snail::stream::ReadExtentReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .snail.stream.CommonReq base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.base_)}},
    // uint32 diskid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReadExtentReq, _impl_.diskid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.diskid_)}},
    // string extent_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.extent_id_)}},
    // uint64 off = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReadExtentReq, _impl_.off_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.off_)}},
    // uint64 len = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReadExtentReq, _impl_.len_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.len_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .snail.stream.CommonReq base = 1;
    {PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 diskid = 2;
    {PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.diskid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string extent_id = 3;
    {PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.extent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 off = 4;
    {PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.off_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 len = 5;
    {PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.len_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::snail::stream::CommonReq>()},
  }}, {{
    "\32\0\0\11\0\0\0\0"
    "snail.stream.ReadExtentReq"
    "extent_id"
  }},
};

PROTOBUF_NOINLINE void ReadExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.ReadExtentReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extent_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  ::memset(&_impl_.off_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.diskid_) -
      reinterpret_cast<char*>(&_impl_.off_)) + sizeof(_impl_.diskid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReadExtentReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


::uint8_t* ReadExtentReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.ReadExtentReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .snail.stream.CommonReq base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_diskid(), target);
  }

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    const std::string& _s = this->_internal_extent_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "snail.stream.ReadExtentReq.extent_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 off = 4;
  if (this->_internal_off() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_off(), target);
  }

  // uint64 len = 5;
  if (this->_internal_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.ReadExtentReq)
  return target;
}

::size_t ReadExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.ReadExtentReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_extent_id());
  }

  // .snail.stream.CommonReq base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  // uint64 off = 4;
  if (this->_internal_off() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_off());
  }

  // uint64 len = 5;
  if (this->_internal_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_len());
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_diskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReadExtentReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReadExtentReq*>(&to_msg);
  auto& from = static_cast<const ReadExtentReq&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.ReadExtentReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_extent_id().empty()) {
    _this->_internal_set_extent_id(from._internal_extent_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonReq>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  if (from._internal_off() != 0) {
    _this->_impl_.off_ = from._impl_.off_;
  }
  if (from._internal_len() != 0) {
    _this->_impl_.len_ = from._impl_.len_;
  }
  if (from._internal_diskid() != 0) {
    _this->_impl_.diskid_ = from._impl_.diskid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReadExtentReq::CopyFrom(const ReadExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.ReadExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReadExtentReq::IsInitialized() const {
  return true;
}

void ReadExtentReq::InternalSwap(ReadExtentReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extent_id_, &other->_impl_.extent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.diskid_)
      + sizeof(ReadExtentReq::_impl_.diskid_)
      - PROTOBUF_FIELD_OFFSET(ReadExtentReq, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata ReadExtentReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReadExtentResp::_Internal {
 public:
  using HasBits = decltype(std::declval<ReadExtentResp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_._has_bits_);
};

void ReadExtentResp::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ReadExtentResp::ReadExtentResp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:snail.stream.ReadExtentResp)
}
inline PROTOBUF_NDEBUG_INLINE ReadExtentResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ReadExtentResp::ReadExtentResp(
    ::google::protobuf::Arena* arena,
    const ReadExtentResp& from)
    : ::google::protobuf::Message(arena) {
  ReadExtentResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(
                              arena, *from._impl_.base_)
                        : nullptr;
  _impl_.len_ = from._impl_.len_;

  // @@protoc_insertion_point(copy_constructor:snail.stream.ReadExtentResp)
}
inline PROTOBUF_NDEBUG_INLINE ReadExtentResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReadExtentResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, len_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::len_));
}
ReadExtentResp::~ReadExtentResp() {
  // @@protoc_insertion_point(destructor:snail.stream.ReadExtentResp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReadExtentResp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.base_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReadExtentResp::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_._cached_size_),
              false,
          },
          &ReadExtentResp::MergeImpl,
          &ReadExtentResp::kDescriptorMethods,
          &descriptor_table_datanode_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ReadExtentResp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReadExtentResp_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::snail::stream::ReadExtentResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 len = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReadExtentResp, _impl_.len_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_.len_)}},
    // .snail.stream.CommonResp base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .snail.stream.CommonResp base = 1;
    {PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 len = 2;
    {PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_.len_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::snail::stream::CommonResp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ReadExtentResp::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.ReadExtentResp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_.len_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReadExtentResp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


::uint8_t* ReadExtentResp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.ReadExtentResp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .snail.stream.CommonResp base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // uint64 len = 2;
  if (this->_internal_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.ReadExtentResp)
  return target;
}

::size_t ReadExtentResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.ReadExtentResp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  // uint64 len = 2;
  if (this->_internal_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReadExtentResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReadExtentResp*>(&to_msg);
  auto& from = static_cast<const ReadExtentResp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.ReadExtentResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  if (from._internal_len() != 0) {
    _this->_impl_.len_ = from._impl_.len_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReadExtentResp::CopyFrom(const ReadExtentResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.ReadExtentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReadExtentResp::IsInitialized() const {
  return true;
}

void ReadExtentResp::InternalSwap(ReadExtentResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_.len_)
      + sizeof(ReadExtentResp::_impl_.len_)
      - PROTOBUF_FIELD_OFFSET(ReadExtentResp, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata ReadExtentResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteExtentReq::_Internal {
 public:
  using HasBits = decltype(std::declval<DeleteExtentReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_._has_bits_);
};

void DeleteExtentReq::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DeleteExtentReq::DeleteExtentReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:snail.stream.DeleteExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE DeleteExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extent_id_(arena, from.extent_id_) {}

DeleteExtentReq::DeleteExtentReq(
    ::google::protobuf::Arena* arena,
    const DeleteExtentReq& from)
    : ::google::protobuf::Message(arena) {
  DeleteExtentReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(
                              arena, *from._impl_.base_)
                        : nullptr;
  _impl_.diskid_ = from._impl_.diskid_;

  // @@protoc_insertion_point(copy_constructor:snail.stream.DeleteExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE DeleteExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extent_id_(arena) {}

inline void DeleteExtentReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, diskid_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::diskid_));
}
DeleteExtentReq::~DeleteExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.DeleteExtentReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteExtentReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.extent_id_.Destroy();
  delete _impl_.base_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DeleteExtentReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_._cached_size_),
              false,
          },
          &DeleteExtentReq::MergeImpl,
          &DeleteExtentReq::kDescriptorMethods,
          &descriptor_table_datanode_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 46, 2> DeleteExtentReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeleteExtentReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::snail::stream::DeleteExtentReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .snail.stream.CommonResp base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.base_)}},
    // uint32 diskid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeleteExtentReq, _impl_.diskid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.diskid_)}},
    // string extent_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.extent_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .snail.stream.CommonResp base = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 diskid = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.diskid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string extent_id = 3;
    {PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.extent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::snail::stream::CommonResp>()},
  }}, {{
    "\34\0\0\11\0\0\0\0"
    "snail.stream.DeleteExtentReq"
    "extent_id"
  }},
};

PROTOBUF_NOINLINE void DeleteExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.DeleteExtentReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extent_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_.diskid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteExtentReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


::uint8_t* DeleteExtentReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.DeleteExtentReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .snail.stream.CommonResp base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_diskid(), target);
  }

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    const std::string& _s = this->_internal_extent_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "snail.stream.DeleteExtentReq.extent_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.DeleteExtentReq)
  return target;
}

::size_t DeleteExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.DeleteExtentReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_extent_id());
  }

  // .snail.stream.CommonResp base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_diskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DeleteExtentReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteExtentReq*>(&to_msg);
  auto& from = static_cast<const DeleteExtentReq&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.DeleteExtentReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_extent_id().empty()) {
    _this->_internal_set_extent_id(from._internal_extent_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  if (from._internal_diskid() != 0) {
    _this->_impl_.diskid_ = from._impl_.diskid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteExtentReq::CopyFrom(const DeleteExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.DeleteExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteExtentReq::IsInitialized() const {
  return true;
}

void DeleteExtentReq::InternalSwap(DeleteExtentReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extent_id_, &other->_impl_.extent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.diskid_)
      + sizeof(DeleteExtentReq::_impl_.diskid_)
      - PROTOBUF_FIELD_OFFSET(DeleteExtentReq, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata DeleteExtentReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetExtentReq::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExtentReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_._has_bits_);
};

void GetExtentReq::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExtentReq::GetExtentReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:snail.stream.GetExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE GetExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extent_id_(arena, from.extent_id_) {}

GetExtentReq::GetExtentReq(
    ::google::protobuf::Arena* arena,
    const GetExtentReq& from)
    : ::google::protobuf::Message(arena) {
  GetExtentReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(
                              arena, *from._impl_.base_)
                        : nullptr;
  _impl_.diskid_ = from._impl_.diskid_;

  // @@protoc_insertion_point(copy_constructor:snail.stream.GetExtentReq)
}
inline PROTOBUF_NDEBUG_INLINE GetExtentReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extent_id_(arena) {}

inline void GetExtentReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, diskid_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::diskid_));
}
GetExtentReq::~GetExtentReq() {
  // @@protoc_insertion_point(destructor:snail.stream.GetExtentReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetExtentReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.extent_id_.Destroy();
  delete _impl_.base_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetExtentReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_._cached_size_),
              false,
          },
          &GetExtentReq::MergeImpl,
          &GetExtentReq::kDescriptorMethods,
          &descriptor_table_datanode_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 43, 2> GetExtentReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetExtentReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::snail::stream::GetExtentReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .snail.stream.CommonResp base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.base_)}},
    // uint32 diskid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetExtentReq, _impl_.diskid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.diskid_)}},
    // string extent_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.extent_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .snail.stream.CommonResp base = 1;
    {PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 diskid = 2;
    {PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.diskid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string extent_id = 3;
    {PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.extent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::snail::stream::CommonResp>()},
  }}, {{
    "\31\0\0\11\0\0\0\0"
    "snail.stream.GetExtentReq"
    "extent_id"
  }},
};

PROTOBUF_NOINLINE void GetExtentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.GetExtentReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extent_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_.diskid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetExtentReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


::uint8_t* GetExtentReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.GetExtentReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .snail.stream.CommonResp base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_diskid(), target);
  }

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    const std::string& _s = this->_internal_extent_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "snail.stream.GetExtentReq.extent_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.GetExtentReq)
  return target;
}

::size_t GetExtentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.GetExtentReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string extent_id = 3;
  if (!this->_internal_extent_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_extent_id());
  }

  // .snail.stream.CommonResp base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_diskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetExtentReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetExtentReq*>(&to_msg);
  auto& from = static_cast<const GetExtentReq&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.GetExtentReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_extent_id().empty()) {
    _this->_internal_set_extent_id(from._internal_extent_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  if (from._internal_diskid() != 0) {
    _this->_impl_.diskid_ = from._impl_.diskid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetExtentReq::CopyFrom(const GetExtentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.GetExtentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetExtentReq::IsInitialized() const {
  return true;
}

void GetExtentReq::InternalSwap(GetExtentReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extent_id_, &other->_impl_.extent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.diskid_)
      + sizeof(GetExtentReq::_impl_.diskid_)
      - PROTOBUF_FIELD_OFFSET(GetExtentReq, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata GetExtentReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetExtentResp::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExtentResp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_._has_bits_);
};

void GetExtentResp::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExtentResp::GetExtentResp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:snail.stream.GetExtentResp)
}
inline PROTOBUF_NDEBUG_INLINE GetExtentResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetExtentResp::GetExtentResp(
    ::google::protobuf::Arena* arena,
    const GetExtentResp& from)
    : ::google::protobuf::Message(arena) {
  GetExtentResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(
                              arena, *from._impl_.base_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, len_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, len_),
           offsetof(Impl_, ctime_) -
               offsetof(Impl_, len_) +
               sizeof(Impl_::ctime_));

  // @@protoc_insertion_point(copy_constructor:snail.stream.GetExtentResp)
}
inline PROTOBUF_NDEBUG_INLINE GetExtentResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetExtentResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, ctime_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::ctime_));
}
GetExtentResp::~GetExtentResp() {
  // @@protoc_insertion_point(destructor:snail.stream.GetExtentResp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetExtentResp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.base_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetExtentResp::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_._cached_size_),
              false,
          },
          &GetExtentResp::MergeImpl,
          &GetExtentResp::kDescriptorMethods,
          &descriptor_table_datanode_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> GetExtentResp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetExtentResp_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::snail::stream::GetExtentResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .snail.stream.CommonResp base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.base_)}},
    // uint64 len = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetExtentResp, _impl_.len_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.len_)}},
    // uint32 ctime = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetExtentResp, _impl_.ctime_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.ctime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .snail.stream.CommonResp base = 1;
    {PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 len = 2;
    {PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.len_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 ctime = 3;
    {PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.ctime_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::snail::stream::CommonResp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetExtentResp::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.GetExtentResp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  ::memset(&_impl_.len_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ctime_) -
      reinterpret_cast<char*>(&_impl_.len_)) + sizeof(_impl_.ctime_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetExtentResp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


::uint8_t* GetExtentResp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.GetExtentResp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .snail.stream.CommonResp base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // uint64 len = 2;
  if (this->_internal_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_len(), target);
  }

  // uint32 ctime = 3;
  if (this->_internal_ctime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_ctime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.GetExtentResp)
  return target;
}

::size_t GetExtentResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.GetExtentResp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  // uint64 len = 2;
  if (this->_internal_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_len());
  }

  // uint32 ctime = 3;
  if (this->_internal_ctime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ctime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetExtentResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetExtentResp*>(&to_msg);
  auto& from = static_cast<const GetExtentResp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.GetExtentResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  if (from._internal_len() != 0) {
    _this->_impl_.len_ = from._impl_.len_;
  }
  if (from._internal_ctime() != 0) {
    _this->_impl_.ctime_ = from._impl_.ctime_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetExtentResp::CopyFrom(const GetExtentResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.GetExtentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetExtentResp::IsInitialized() const {
  return true;
}

void GetExtentResp::InternalSwap(GetExtentResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.ctime_)
      + sizeof(GetExtentResp::_impl_.ctime_)
      - PROTOBUF_FIELD_OFFSET(GetExtentResp, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata GetExtentResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDiskStatusReq::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateDiskStatusReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_._has_bits_);
};

void UpdateDiskStatusReq::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateDiskStatusReq::UpdateDiskStatusReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:snail.stream.UpdateDiskStatusReq)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDiskStatusReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateDiskStatusReq::UpdateDiskStatusReq(
    ::google::protobuf::Arena* arena,
    const UpdateDiskStatusReq& from)
    : ::google::protobuf::Message(arena) {
  UpdateDiskStatusReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(
                              arena, *from._impl_.base_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, diskid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, diskid_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, diskid_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:snail.stream.UpdateDiskStatusReq)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDiskStatusReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateDiskStatusReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::status_));
}
UpdateDiskStatusReq::~UpdateDiskStatusReq() {
  // @@protoc_insertion_point(destructor:snail.stream.UpdateDiskStatusReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateDiskStatusReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.base_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateDiskStatusReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_._cached_size_),
              false,
          },
          &UpdateDiskStatusReq::MergeImpl,
          &UpdateDiskStatusReq::kDescriptorMethods,
          &descriptor_table_datanode_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> UpdateDiskStatusReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateDiskStatusReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::snail::stream::UpdateDiskStatusReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .snail.stream.CommonResp base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.base_)}},
    // uint32 diskid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateDiskStatusReq, _impl_.diskid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.diskid_)}},
    // uint32 status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateDiskStatusReq, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .snail.stream.CommonResp base = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 diskid = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.diskid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 status = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::snail::stream::CommonResp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateDiskStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:snail.stream.UpdateDiskStatusReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  ::memset(&_impl_.diskid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.diskid_)) + sizeof(_impl_.status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateDiskStatusReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


::uint8_t* UpdateDiskStatusReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:snail.stream.UpdateDiskStatusReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .snail.stream.CommonResp base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_diskid(), target);
  }

  // uint32 status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:snail.stream.UpdateDiskStatusReq)
  return target;
}

::size_t UpdateDiskStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:snail.stream.UpdateDiskStatusReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .snail.stream.CommonResp base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  // uint32 diskid = 2;
  if (this->_internal_diskid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_diskid());
  }

  // uint32 status = 3;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateDiskStatusReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDiskStatusReq*>(&to_msg);
  auto& from = static_cast<const UpdateDiskStatusReq&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:snail.stream.UpdateDiskStatusReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::snail::stream::CommonResp>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  if (from._internal_diskid() != 0) {
    _this->_impl_.diskid_ = from._impl_.diskid_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDiskStatusReq::CopyFrom(const UpdateDiskStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:snail.stream.UpdateDiskStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateDiskStatusReq::IsInitialized() const {
  return true;
}

void UpdateDiskStatusReq::InternalSwap(UpdateDiskStatusReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.status_)
      + sizeof(UpdateDiskStatusReq::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UpdateDiskStatusReq, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata UpdateDiskStatusReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace stream
}  // namespace snail
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_datanode_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
